@using activities.Repository.Configs;

@inject IAppConfigsRepository _ConfigService;
<AuthorizeView Roles="Admin">
    <MudSwitch @onclick="@((e)=>TestModeChanged())" Checked="@TestEnabled" Label="Test Users" Color="Color.Error" />
</AuthorizeView>
<AuthorizeView>
    <Authorized>
        <MudButton Href="Identity/Account/Manage" Variant="Variant.Text" Style="color:white" StartIcon="@Icons.Material.Filled.AccountCircle">Hello, @context.User.Identity?.Name!</MudButton>

        <form method="post" action="Identity/Account/Logout">
            <MudButton Color="Color.Inherit" ButtonType="ButtonType.Submit" StartIcon="@Icons.Material.Filled.Logout">Log out</MudButton>
        </form>

    </Authorized>
    <NotAuthorized>
        <MudButton Href="Identity/Account/Login" Variant="Variant.Text" Style="color:white" StartIcon="@Icons.Material.Filled.Login">Login</MudButton>
        <MudButton Href="Identity/Account/Register" Variant="Variant.Text" Style="color:white" StartIcon="@Icons.Material.Filled.AccountCircle">Register</MudButton>
    </NotAuthorized>
</AuthorizeView>



@code {
    public bool TestEnabled { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //set the testuser attribute of the profile in all forms
            try
            {
                TestEnabled = await _ConfigService.GetTestsUserMode();
                StateHasChanged();
            }
            catch (Exception ex)
            {
                TestEnabled = false;
            }
        }
    }
    private async Task TestModeChanged()
    {
        await _ConfigService.SetTestsUserMode(!TestEnabled);
        TestEnabled = !TestEnabled;
    }
}